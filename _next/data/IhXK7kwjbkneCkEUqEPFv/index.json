{"pageProps":{"posts":[{"slug":"sparse-sets","title":"Sparse Sets - Uma Representação Eficiente de Conjuntos Numéricos","date":"2022-04-03 14:00:10 -0300","tags":["estrutura-de-dados"],"source":{"compiledSource":"var m=Object.defineProperty,u=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var d=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var s=(t,a,n)=>a in t?m(t,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[a]=n,e=(t,a)=>{for(var n in a||(a={}))d.call(a,n)&&s(t,n,a[n]);if(o)for(var n of o(a))l.call(a,n)&&s(t,n,a[n]);return t},p=(t,a)=>u(t,g(a));var i=(t,a)=>{var n={};for(var r in t)d.call(t,r)&&a.indexOf(r)<0&&(n[r]=t[r]);if(t!=null&&o)for(var r of o(t))a.indexOf(r)<0&&l.call(t,r)&&(n[r]=t[r]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var r=n,{components:t}=r,a=i(r,[\"components\"]);return mdx(MDXLayout,p(e(e({},layoutProps),a),{components:t,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Conjuntos\"),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"Conjunto Num\\xE9rico\"),\" \\xE9 uma abstra\\xE7\\xE3o fundamental bastante utilizada na programa\\xE7\\xE3o, v\\xE1rias representa\\xE7\\xF5es s\\xE3o poss\\xEDveis, cada uma com suas vantagens e desvantagens. Existem duas principais representa\\xE7\\xF5es amplamente utilizadas: \",mdx(\"strong\",{parentName:\"p\"},\"\\xC1rvores Bin\\xE1rias\"),\" e \",mdx(\"strong\",{parentName:\"p\"},\"Tabelas Hash\")),mdx(\"h2\",null,\"Representa\\xE7\\xF5es mais comuns\"),mdx(\"h3\",null,\"\\xC1rvores Bin\\xE1rias de Busca\"),mdx(\"p\",null,\"Esta representa\\xE7\\xE3o se aproveita da habilidade de inserir elementos ordenados e rotacionar a \\xE1rvores para mant\\xEAl\\xE1 balanceada para representa\\xE7\\xE3o conjuntos, e \\xE9 vantajosa quando o conjunto precisa sempre estar ordenado e possuir muitos elementos.\"),mdx(\"h3\",null,\"Tabelas Hash\"),mdx(\"p\",null,\"Esta representa\\xE7\\xE3o ganha destaque pelo desempenho superior ao das \\xE1rvores bin\\xE1rias enquanto existirem poucos elementos e por consequ\\xEAncia poucas colis\\xF5es, por\\xE9m a ordem n\\xE3o pode ser obrigat\\xF3ria.\"),mdx(\"h3\",null,\"Tabela de Complexidade Assint\\xF3tica\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Opera\\xE7\\xE3o\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"\\xC1rvore Bin\\xE1ria\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Tabela Hash\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Inserir\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(lg\\u2061(n))\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"o(1); O(n)\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Remover\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(lg\\u2061(n))\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"o(1); O(n)\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Pesquisar\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(lg\\u2061(n))\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"o(1); O(n)\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Limpar\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(lg\\u2061(n))\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"o(1); O(n)\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Iterar\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(n)\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(n)\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Espa\\xE7o\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(n)\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(n)\")))),mdx(\"h1\",null,\"Sparse Sets\"),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"Sparse Set\"),` \\xE9 uma estrutura de dados simples e muito eficiente que garante um conjunto de n\\xFAmeros \\xFAnicos, por\\xE9m n\\xE3o ordenados.\nSua implementa\\xE7\\xE3o \\xE9 formada por dois arranjos de n\\xFAmeros, um esparso ($S$) e outro denso ($$D$$), sendo $$|S| + 1$$ o valor m\\xE1ximo que pode ser inserido no conjunto, e para que um elemento n exista no conjunto esparso, as seguintes restri\\xE7\\xF5es devem ser atendidas:`),mdx(\"h2\",null,\"Restri\\xE7\\xF5es\"),mdx(\"h3\",null,\"Quantidade\"),mdx(\"p\",null,\"A quantidade m\\xE1xima de n\\xFAmeros que podem ser adicionados \\xE9 igual ao maior n\\xFAmero que ser\\xE1 inserido mais 1:\"),mdx(\"p\",null,\"$$0 < S\",\"[n]\",\" < |S|$$\"),mdx(\"h3\",null,\"\\xCDndice\"),mdx(\"p\",null,\"O \\xEDndice $$n$$ do conjunto esparso aponta para o \\xEDndice do n\\xFAmero $$n$$ no conjunto denso:\"),mdx(\"p\",null,\"$$D[S\",\"[n]\",\"] == n$$\"),mdx(\"p\",null,\"Ex: {5, 1, 4}\"),mdx(\"center\",null,mdx(\"img\",{src:\"/images/sparse-sets.png\"})),mdx(\"h2\",null,\"Vantagens\"),mdx(\"h3\",null,\"Complexidade Assint\\xF3tica Superior\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Opera\\xE7\\xE3o\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"\\xC1rvore Bin\\xE1ria\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Tabela Hash\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Sparse Set\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Inserir\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(lg\\u2061(n))\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"o(1); O(n)\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(1)\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Remover\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(lg\\u2061(n))\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"o(1); O(n)\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(1)\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Pesquisar\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(lg\\u2061(n))\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"o(1); O(n)\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(1)\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Limpar\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(lg\\u2061(n))\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"o(1); O(n)\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(1)\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Iterar\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(n)\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(n)\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(n)\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Espa\\xE7o\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(n)\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(n)\"),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"O(n)\")))),mdx(\"h3\",null,\"Layout de mem\\xF3ria\"),mdx(\"p\",null,\"Os n\\xFAmeros que pertencem ao conjunto s\\xE3o organizados \",mdx(\"strong\",{parentName:\"p\"},\"contiguamente\"),\" no arranjo denso, dando uma vantagem enorme nas opera\\xE7\\xF5es de inserir, remover, pesquisar e itera\\xE7\\xE3o por ter um layout de mem\\xF3ria amig\\xE1vel ao cache do processador. Vale lembrar que opera\\xE7\\xF5es de uni\\xE3o, intersec\\xE7\\xE3o e diferen\\xE7a s\\xE3o exemplos extremamente relevantes de opera\\xE7\\xF5es que s\\xE3o implementadas com as opera\\xE7\\xF5es de inserir, remover, pesquisar e iterar.\"),mdx(\"h2\",null,\"Desvantagens\"),mdx(\"h3\",null,\"Quantidade finita\"),mdx(\"p\",null,\"As outras representa\\xE7\\xF5es de conjuntos n\\xE3o possuem a limita\\xE7\\xE3o de quantidade existente na defini\\xE7\\xE3o da estrutura do sparse set, por\\xE9m ainda s\\xE3o limitadas pelos limites de hardware.\"),mdx(\"h3\",null,\"N\\xFAmeros negativos\"),mdx(\"p\",null,\"Pela defini\\xE7\\xE3o da implementa\\xE7\\xE3o do sparse set ser relativo aos \\xEDndices, os n\\xFAmeros negativos n\\xE3o podem ser adicionados nesses conjuntos a menos que: seja delimitado o menor e maior n\\xFAmero que pode ser adicionado e com base nisso, os n\\xFAmeros sejam convertidos para os seus respectivos \\xEDndices, por exemplo:\"),mdx(\"center\",null,mdx(\"p\",null,\"Menor: -10, Maior: 100\")),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:\"left\"}),\"\\xEDndice\"),mdx(\"th\",e({parentName:\"tr\"},{align:\"center\"}),\"0\"),mdx(\"th\",e({parentName:\"tr\"},{align:\"center\"}),\"1\"),mdx(\"th\",e({parentName:\"tr\"},{align:\"center\"}),\"2\"),mdx(\"th\",e({parentName:\"tr\"},{align:\"center\"}),\"...\"),mdx(\"th\",e({parentName:\"tr\"},{align:\"center\"}),\"10\"),mdx(\"th\",e({parentName:\"tr\"},{align:\"center\"}),\"...\"),mdx(\"th\",e({parentName:\"tr\"},{align:\"center\"}),\"109\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:\"left\"}),\"valor\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"-10\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"-9\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"-8\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"...\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"0\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"...\"),mdx(\"td\",e({parentName:\"tr\"},{align:\"center\"}),\"100\")))),mdx(\"h2\",null,\"Gloss\\xE1rio\"),mdx(\"h3\",null,\"Contiguamente\"),mdx(\"p\",null,\"De modo cont\\xEDguo, vizinho, pr\\xF3ximo, um ao lado do outro.\"))}MDXContent.isMDXComponent=!0;\n","scope":{"slug":"sparse-sets","title":"Sparse Sets - Uma Representação Eficiente de Conjuntos Numéricos","date":"2022-04-03 14:00:10 -0300","tags":["estrutura-de-dados"],"content":"\n# Conjuntos\n**Conjunto Numérico** é uma abstração fundamental bastante utilizada na programação, várias representações são possíveis, cada uma com suas vantagens e desvantagens. Existem duas principais representações amplamente utilizadas: **Árvores Binárias** e **Tabelas Hash**\n## Representações mais comuns\n### Árvores Binárias de Busca\nEsta representação se aproveita da habilidade de inserir elementos ordenados e rotacionar a árvores para mantêlá balanceada para representação conjuntos, e é vantajosa quando o conjunto precisa sempre estar ordenado e possuir muitos elementos.\n### Tabelas Hash\nEsta representação ganha destaque pelo desempenho superior ao das árvores binárias enquanto existirem poucos elementos e por consequência poucas colisões, porém a ordem não pode ser obrigatória.\n### Tabela de Complexidade Assintótica\n\n\nOperação   |Árvore Binária |Tabela Hash    \n---------- | ------------- | -----------\nInserir    |O(lg⁡(n))       |o(1); O(n)             \nRemover    |O(lg⁡(n))       |o(1); O(n)             \nPesquisar  |O(lg⁡(n))       |o(1); O(n)             \nLimpar     |O(lg⁡(n))       |o(1); O(n)           \nIterar     |O(n)           |O(n)                 \nEspaço     |O(n)           |O(n)           \n\n# Sparse Sets\n**Sparse Set** é uma estrutura de dados simples e muito eficiente que garante um conjunto de números únicos, porém não ordenados. \nSua implementação é formada por dois arranjos de números, um esparso ($S$) e outro denso ($$D$$), sendo $$|S| + 1$$ o valor máximo que pode ser inserido no conjunto, e para que um elemento n exista no conjunto esparso, as seguintes restrições devem ser atendidas:\n\n## Restrições\n\n### Quantidade\nA quantidade máxima de números que podem ser adicionados é igual ao maior número que será inserido mais 1:\n\n$$0 < S[n] < |S|$$\n\n### Índice\nO índice $$n$$ do conjunto esparso aponta para o índice do número $$n$$ no conjunto denso:\n\n$$D[S[n]] == n$$\n\n\nEx: {5, 1, 4}\n\n<center>\n<img src=\"/images/sparse-sets.png\" />\n</center>\n\n## Vantagens\n\n### Complexidade Assintótica Superior\n\nOperação   |Árvore Binária |Tabela Hash | Sparse Set\n---------- | ------------- | ---------- | -----------\nInserir    |O(lg⁡(n))       |o(1); O(n)  |O(1)\nRemover    |O(lg⁡(n))       |o(1); O(n)  |O(1)           \nPesquisar  |O(lg⁡(n))       |o(1); O(n)  |O(1)       \nLimpar     |O(lg⁡(n))       |o(1); O(n)  |O(1)     \nIterar     |O(n)           |O(n)        |O(n)    \nEspaço     |O(n)           |O(n)        |O(n)\n\n### Layout de memória\n\nOs números que pertencem ao conjunto são organizados **contiguamente** no arranjo denso, dando uma vantagem enorme nas operações de inserir, remover, pesquisar e iteração por ter um layout de memória amigável ao cache do processador. Vale lembrar que operações de união, intersecção e diferença são exemplos extremamente relevantes de operações que são implementadas com as operações de inserir, remover, pesquisar e iterar.\n## Desvantagens\n### Quantidade finita\nAs outras representações de conjuntos não possuem a limitação de quantidade existente na definição da estrutura do sparse set, porém ainda são limitadas pelos limites de hardware.\n### Números negativos \nPela definição da implementação do sparse set ser relativo aos índices, os números negativos não podem ser adicionados nesses conjuntos a menos que: seja delimitado o menor e maior número que pode ser adicionado e com base nisso, os números sejam convertidos para os seus respectivos índices, por exemplo:\n\n<center>\n<p>Menor: -10, Maior: 100</p>\n</center>\n\níndice|0   |1  |2  |...|10 |...|109\n:-----|:--:|:-:|:-:|:-:|:-:|:-:|:--:\nvalor |-10 | -9| -8|...| 0 |...|100 \n\n## Glossário\n\n### Contiguamente\nDe modo contíguo, vizinho, próximo, um ao lado do outro."}}},{"slug":"particionamento-espacial-de-dados","title":"Particionamento Espacial de Dados","date":"11/11/2021","tags":["hello","world"],"source":{"compiledSource":"var D=Object.defineProperty,M=Object.defineProperties;var X=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var u=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;var r=(o,t,n)=>t in o?D(o,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):o[t]=n,s=(o,t)=>{for(var n in t||(t={}))u.call(t,n)&&r(o,n,t[n]);if(p)for(var n of p(t))a.call(t,n)&&r(o,n,t[n]);return o},c=(o,t)=>M(o,X(t));var y=(o,t)=>{var n={};for(var e in o)u.call(o,e)&&t.indexOf(e)<0&&(n[e]=o[e]);if(o!=null&&p)for(var e of p(o))t.indexOf(e)<0&&a.call(o,e)&&(n[e]=o[e]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var e=n,{components:o}=e,t=y(e,[\"components\"]);return mdx(MDXLayout,c(s(s({},layoutProps),t),{components:o,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Conceito\"),mdx(\"p\",null,\"asds\"))}MDXContent.isMDXComponent=!0;\n","scope":{"slug":"particionamento-espacial-de-dados","title":"Particionamento Espacial de Dados","date":"11/11/2021","tags":["hello","world"],"content":"\n# Conceito\n\nasds\n"}}},{"slug":"welcome","title":"Bem vindo","date":"03/28/2021","tags":["well","come","hello"],"source":{"compiledSource":"var d=Object.defineProperty,h=Object.defineProperties;var c=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var l=(e,a,n)=>a in e?d(e,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[a]=n,s=(e,a)=>{for(var n in a||(a={}))p.call(a,n)&&l(e,n,a[n]);if(o)for(var n of o(a))r.call(a,n)&&l(e,n,a[n]);return e},i=(e,a)=>h(e,c(a));var m=(e,a)=>{var n={};for(var t in e)p.call(e,t)&&a.indexOf(t)<0&&(n[t]=e[t]);if(e!=null&&o)for(var t of o(e))a.indexOf(t)<0&&r.call(e,t)&&(n[t]=e[t]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var t=n,{components:e}=t,a=m(t,[\"components\"]);return mdx(MDXLayout,i(s(s({},layoutProps),a),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"You\\u2019ll find this post in your \",mdx(\"inlineCode\",{parentName:\"p\"},\"_posts\"),\" directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run \",mdx(\"inlineCode\",{parentName:\"p\"},\"jekyll serve\"),\", which launches a web server and auto-regenerates your site when a file is updated.\"),mdx(\"p\",null,\"To add new posts, simply add a file in the \",mdx(\"inlineCode\",{parentName:\"p\"},\"_posts\"),\" directory that follows the convention \",mdx(\"inlineCode\",{parentName:\"p\"},\"YYYY-MM-DD-name-of-post.ext\"),\" and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.\"),mdx(\"p\",null,\"Jekyll also offers powerful support for code snippets:\"),mdx(\"pre\",null,mdx(\"code\",s({parentName:\"pre\"},{className:\"hljs language-ruby\"}),mdx(\"span\",s({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",s({parentName:\"span\"},{className:\"hljs-keyword\"}),\"def\"),\" \",mdx(\"span\",s({parentName:\"span\"},{className:\"hljs-title\"}),\"print_hi\"),mdx(\"span\",s({parentName:\"span\"},{className:\"hljs-params\"}),\"(name)\")),`\nputs `,mdx(\"span\",s({parentName:\"code\"},{className:\"hljs-string\"}),'\"Hi, ',mdx(\"span\",s({parentName:\"span\"},{className:\"hljs-subst\"}),\"#{name}\"),'\"'),`\n`,mdx(\"span\",s({parentName:\"code\"},{className:\"hljs-keyword\"}),\"end\"),`\nprint_hi(`,mdx(\"span\",s({parentName:\"code\"},{className:\"hljs-string\"}),\"'Tom'\"),`)\n`,mdx(\"span\",s({parentName:\"code\"},{className:\"hljs-comment\"}),\"#=> prints 'Hi, Tom' to STDOUT.\"))),mdx(\"p\",null,\"Check out the \",mdx(\"a\",s({parentName:\"p\"},{href:\"https://jekyllrb.com/docs/home\"}),\"Jekyll docs\"),\" for more info on how to get the most out of Jekyll. File all bugs/feature requests at \",mdx(\"a\",s({parentName:\"p\"},{href:\"https://github.com/jekyll/jekyll\"}),\"Jekyll\\u2019s GitHub repo\"),\". If you have questions, you can ask them on \",mdx(\"a\",s({parentName:\"p\"},{href:\"https://talk.jekyllrb.com/\"}),\"Jekyll Talk\"),\".\"))}MDXContent.isMDXComponent=!0;\n","scope":{"slug":"welcome","title":"Bem vindo","date":"03/28/2021","tags":["well","come","hello"],"content":"\nYou’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.\n\nTo add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.\n\nJekyll also offers powerful support for code snippets:\n\n```ruby\ndef print_hi(name)\nputs \"Hi, #{name}\"\nend\nprint_hi('Tom')\n#=> prints 'Hi, Tom' to STDOUT.\n```\n\nCheck out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].\n\n[jekyll-docs]: https://jekyllrb.com/docs/home\n[jekyll-gh]: https://github.com/jekyll/jekyll\n[jekyll-talk]: https://talk.jekyllrb.com/\n"}}},{"slug":"hello-world","title":"Hello World","date":"02/28/2021","tags":["hello","world"],"source":{"compiledSource":"var N=Object.defineProperty,i=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var m=Object.prototype.hasOwnProperty,t=Object.prototype.propertyIsEnumerable;var c=(s,e,n)=>e in s?N(s,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):s[e]=n,a=(s,e)=>{for(var n in e||(e={}))m.call(e,n)&&c(s,n,e[n]);if(l)for(var n of l(e))t.call(e,n)&&c(s,n,e[n]);return s},r=(s,e)=>i(s,d(e));var o=(s,e)=>{var n={};for(var p in s)m.call(s,p)&&e.indexOf(p)<0&&(n[p]=s[p]);if(s!=null&&l)for(var p of l(s))e.indexOf(p)<0&&t.call(s,p)&&(n[p]=s[p]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var p=n,{components:s}=p,e=o(p,[\"components\"]);return mdx(MDXLayout,r(a(a({},layoutProps),e),{components:s,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"This is an example post. There's another one \",mdx(\"a\",a({parentName:\"p\"},{href:\"/posts/example-post\"}),\"here\"),`.\n\\u{1F4A9}\n\\u2705`),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"hljs language-cpp\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-meta\"}),\"#\",mdx(\"span\",a({parentName:\"span\"},{className:\"hljs-meta-keyword\"}),\"include\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"hljs-meta-string\"}),\"<iostream>\")),`\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-keyword\"}),\"using\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-keyword\"}),\"namespace\"),` std;\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-comment\"}),`/*\n * oaskdoaskd\n */`),`\n\n `,mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-class\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"hljs-keyword\"}),\"class\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"hljs-title\"}),\"Application\"),`\n {`),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-keyword\"}),\"public\"),`:\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-built_in\"}),\"Application\"),\"(string name) : \",mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-built_in\"}),\"m_name\"),`(name) {}\n    ~`,mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-built_in\"}),\"Application\"),\"() = \",mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-keyword\"}),\"default\"),`;\n\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-function\"}),\"string \",mdx(\"span\",a({parentName:\"span\"},{className:\"hljs-title\"}),\"get_name\"),mdx(\"span\",a({parentName:\"span\"},{className:\"hljs-params\"}),\"()\"),\" \"),\"{ \",mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-keyword\"}),\"return\"),` m_name; }\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-keyword\"}),\"private\"),`:\n    string m_name;\n }\n\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-comment\"}),\"// main function to initialize the application\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-function\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"hljs-keyword\"}),\"int\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"hljs-title\"}),\"main\"),mdx(\"span\",a({parentName:\"span\"},{className:\"hljs-params\"}),\"(\",mdx(\"span\",a({parentName:\"span\"},{className:\"hljs-keyword\"}),\"int\"),\" argc, \",mdx(\"span\",a({parentName:\"span\"},{className:\"hljs-keyword\"}),\"char\"),\"** argv)\"),`\n`),`{\n    Application app = `,mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-keyword\"}),\"new\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-built_in\"}),\"Application\"),\"(\",mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-string\"}),'\"hello\"'),`);\n\n    cout << `,mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-string\"}),'\"hello world\"'),` << endl;\n\n    `,mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-keyword\"}),\"return\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"hljs-number\"}),\"0\"),`;\n}\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{"slug":"hello-world","title":"Hello World","date":"02/28/2021","tags":["hello","world"],"content":"\nThis is an example post. There's another one [here](/posts/example-post).\n:poop:\n:white_check_mark:\n\n```cpp\n#include <iostream>\n\nusing namespace std;\n\n/*\n * oaskdoaskd\n */\n\n class Application\n {\npublic:\n    Application(string name) : m_name(name) {}\n    ~Application() = default;\n\n    string get_name() { return m_name; }\nprivate:\n    string m_name;\n }\n\n// main function to initialize the application\nint main(int argc, char** argv)\n{\n    Application app = new Application(\"hello\");\n\n    cout << \"hello world\" << endl;\n\n    return 0;\n}\n\n```\n"}}}]},"__N_SSG":true}